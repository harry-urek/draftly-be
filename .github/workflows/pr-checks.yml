name: PR Merge Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened, ready_for_review ]

env:
  NODE_VERSION: '18'

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
          requireScope: false
          disallowScopes: |
            release
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.

      - name: Check PR size
        uses: noqcks/pr-size-labeler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: 'size/XS'
          xs_max_size: '10'
          s_label: 'size/S'
          s_max_size: '100'
          m_label: 'size/M'
          m_max_size: '500'
          l_label: 'size/L'
          l_max_size: '1000'
          xl_label: 'size/XL'
          fail_if_xl: 'true'

  quick-checks:
    name: Quick Quality Checks
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npm run db:generate

      - name: Run lint on changed files
        run: |
          git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -E '\.(ts|js)$' | xargs npm run lint:fix || true
          
      - name: Run type check
        run: npm run type-check

      - name: Check for TODO/FIXME comments
        run: |
          if grep -r "TODO\|FIXME\|XXX\|HACK" src/ --include="*.ts" --include="*.js"; then
            echo "⚠️  Found TODO/FIXME comments. Please resolve before merging."
            exit 1
          else
            echo "✅ No TODO/FIXME comments found."
          fi

      - name: Check for console.log statements
        run: |
          if grep -r "console\.log" src/ --include="*.ts" --include="*.js" --exclude-dir=node_modules; then
            echo "⚠️  Found console.log statements. Please remove or replace with proper logging."
            exit 1
          else
            echo "✅ No console.log statements found."
          fi

      - name: Check for hardcoded secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Check for new vulnerabilities
        run: npm audit --audit-level moderate

      - name: Check for outdated dependencies
        run: |
          outdated=$(npm outdated --json || true)
          if [ "$outdated" != "{}" ] && [ "$outdated" != "" ]; then
            echo "⚠️  Outdated dependencies found:"
            echo "$outdated" | jq .
            echo "Consider updating dependencies before merging."
          else
            echo "✅ All dependencies are up to date."
          fi

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7.0
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npm run db:generate

      - name: Build application
        run: npm run build

      - name: Run tests
        run: npm run test
        env:
          DATABASE_URL: mongodb://root:password@localhost:27017/draftly_test?authSource=admin
          REDIS_URL: redis://localhost:6379
          NODE_ENV: test
          VERTEX_AI_PROJECT_ID: test-project
          GOOGLE_CLIENT_ID: test-client-id
          GOOGLE_CLIENT_SECRET: test-client-secret
          GOOGLE_REDIRECT_URI: http://localhost:3001/auth/oauth/google/callback
          TOKEN_ENCRYPTION_KEY: dGVzdC1lbmNyeXB0aW9uLWtleS0zMi1ieXRlcw==

  merge-requirements:
    name: Check Merge Requirements
    runs-on: ubuntu-latest
    needs: [pr-validation, quick-checks, dependency-check, build-and-test]
    if: github.event.pull_request.draft == false
    steps:
      - name: All checks passed
        run: |
          echo "✅ All merge requirements satisfied!"
          echo "🚀 This PR is ready to be merged."

      - name: Add merge ready label
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['ready-to-merge', 'qa-approved']
            })

  auto-merge:
    name: Auto Merge
    runs-on: ubuntu-latest
    needs: [merge-requirements]
    if: |
      github.event.pull_request.draft == false && 
      contains(github.event.pull_request.labels.*.name, 'auto-merge') &&
      github.actor == 'dependabot[bot]'
    steps:
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
