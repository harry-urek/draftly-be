services:
  # MongoDB Database with Replica Set
  mongodb:
    image: mongo:7-jammy
    container_name: draftly-mongodb
    restart: unless-stopped
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-replica-set.sh:/docker-entrypoint-initdb.d/init-replica-set.sh:ro
    ports:
      - "27017:27017"
    command: ["--replSet", "rs0", "--bind_ip_all", "--quiet", "--logpath", "/dev/null"]
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping').ok"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - draftly-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: draftly-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - draftly-network

  # Draftly Server
  draftly-server:
    build:
      context: .
      target: ${NODE_ENV:-development}
    container_name: draftly-server
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: mongodb://mongodb:27017/${MONGO_DB:-draftly}?replicaSet=rs0&directConnection=true
      REDIS_URL: redis://redis:6379
      PORT: 3001
      HOST: 0.0.0.0
      DEBUG: ""
      PRISMA_LOG_LEVEL: warn
      GOOGLE_APPLICATION_CREDENTIALS: /app/vertex-ai-key.json
    env_file:
      - .env
    ports:
      - "3001:3001"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - node_modules:/app/node_modules
      - ./vertex-ai-key.json:/app/vertex-ai-key.json:ro
    networks:
      - draftly-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: draftly-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - draftly-server
    networks:
      - draftly-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  node_modules:
    driver: local

networks:
  draftly-network:
    driver: bridge